plugins {
    id 'java'
    id 'application'
    id 'maven-publish'
}

group = 'org.example.kaibutsu'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
    repositories {
        maven {
            // ローカルリポジトリへのパスを指定
            url = uri("${System.getProperty('user.home')}/.m2/repository")
        }
    }
}

mainClassName = 'org.example.kaibutsu.Kaibutsu'

jar {
    manifest {
        attributes(
                'Main-Class': mainClassName
        )
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    // 重複するファイルを除外する
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

dependencies {
    // https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-webflux
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-webflux', version: '3.1.0'
    // https://mvnrepository.com/artifact/org.jsoup/jsoup
    implementation group: 'org.jsoup', name: 'jsoup', version: '1.17.2'
    // https://mvnrepository.com/artifact/com.microsoft.playwright/playwright
    implementation group: 'com.microsoft.playwright', name: 'playwright', version: '1.43.0'
    implementation group: 'org.apache.commons', name: 'commons-csv', version: '1.10.0'
    // https://mvnrepository.com/artifact/org.slf4j/slf4j-api
    implementation group: 'org.slf4j', name: 'slf4j-api', version: '2.0.12'
    // https://mvnrepository.com/artifact/org.reflections/reflections
    implementation group: 'org.reflections', name: 'reflections', version: '0.10.2'
    implementation 'org.apache.commons:commons-csv:1.10.0'
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.apiguardian:apiguardian-api:1.1.2'
}

test {
    useJUnitPlatform()
}

sourceSets {
    integrationTest {
        java.srcDir file('src/integrationTest/java')
        resources.srcDir file('src/integrationTest/resources')
        compileClasspath += sourceSets.main.output + configurations.testRuntimeClasspath
        runtimeClasspath += output + compileClasspath
    }
}

task integrationTest(type: Test) {
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    useJUnitPlatform()
}

check.dependsOn integrationTest

processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

processIntegrationTestResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
